#!/bin/sh

NODE=netspire
HOST=$(hostname -f)

ERL=%%ERL%%
# Starts the Erlang runtime system with SMP support (enable|auto|disable)
SMP=auto
# Path to store internal application state
NETSPIRE_DB=%%SPOOLDIR%%
# Path to "ebin" directory of your Netspire installation
NETSPIRE_EBIN=%%BEAMDIR%%
# Path to netspire.conf file
NETSPIRE_CONFIG=%%NETSPIRE_CONFIG%%
# Path to netspire logs
NETSPIRE_LOG=%%NETSPIRE_LOG%%
# Path to PID file
NETSPIRE_PIDFILE=%%PIDFILE%%

ERL_CRASH_DUMP=$NETSPIRE_LOG/erl_crash.dump
export ERL_CRASH_DUMP

start() {
    for dir in $NETSPIRE_DB $NETSPIRE_EBIN; do
        [ ! -d $dir ] && echo "$dir does not exists" && exit 1
    done
    [ ! -f $NETSPIRE_CONFIG ] &&
        echo "Configuration file does not exists" && exit 1
    if [ -r $NETSPIRE_PIDFILE ]; then
        kill -0 `cat $NETSPIRE_PIDFILE` 2> /dev/null
        if [ $? = 0 ]; then
            echo "Netspire already started"
            exit 1
        fi
    fi
    echo "Starting Netspire"
    %%ERL%% +W w \
        -noinput -detached \
        -smp $SMP \
        -name $NODE@$HOST \
        -pa $NETSPIRE_EBIN \
        -mnesia dir "\"$NETSPIRE_DB\"" \
        -netspire config \"$NETSPIRE_CONFIG\" \
        -pidfile $NETSPIRE_PIDFILE \
        -eval 'application:start(netspire).'
}

stop() {
    echo "Stopping Netspire"
    %%ERL%% -name nsctl@$HOST \
        -eval "rpc:call('$NODE@$HOST', init, stop, [], 5000)" \
        -s erlang halt \
        -noshell \
        -noinput \
        -nohidden
    rm -f $NETSPIRE_PIDFILE
}

shell() {
    $ERL -name netspire-remote -hidden -remsh $NODE@$HOST
}

usage()
{
    echo "usage: $0 {start|stop|status|shell}"
    exit 1
}

[ $# -lt 1 ] && usage

case $1 in
    start)
        start;;
    stop)
        stop;;
    status)
        kill -0 $NETSPIRE_PIDFILE 2>/dev/null && \
            echo "Started" || echo "Stopped";;
    shell)
        shell;;
    *) usage;;
esac
